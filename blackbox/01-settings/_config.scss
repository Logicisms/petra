//
//  Petra config
//
//  Fallback configuration map
$_petra: (
    debugging: (
        messages: (
            lede:                   ("Invalid value(s):", "at mixin:"),
            on-warn:                "Follow backtrace or review rendered markup.",
            on-error:               "Follow backtrace and correct invalid syntax to unblock compiler.",
            
            project-settings:       "No '$settings' map found for this project.",
            
            default:                "mixin (no message defined)",
            respond-to:             "@include respond-to()",
            float:                  "@include align()",
            null:                   "@include null()",
        ),
        outline: (
            color:                  red,
            style:                  solid,
            width:                  0.5rem,
        ),
        flags: (
            //  set to 'true' to warn if no $settings map is declared.
            project-settings:       true,
            
            //  warn/error flags for petra mixins using the debug utility.
            //  set to 'true' to error out of a compile with incorrect syntax.
            respond-to:             false,
            float:                  false,
            null:                   false,
        ),
    ),
    
    namespacing: (
        prefixes: (
            object:                 "o-",
            component:              "c-",
            utility:                "u-",
            scope:                  "s-",
            state:                  "is-",
            hack:                   "\*\*",
            javascript:             "js-",
        ),
        delimiters: (
            element:                "__",
            modifier:               "--",
            responsive:             \@,
        ),
    ),
    
    typography: (
        browser-context:        16px,
        
        font-stacks: (
            sans-serif:         ("Helvetica Neue", Helvetica, sans-serif),
            serif:              ("Times New Roman", Times, serif),
            monospace:          ("Lucida Console", Monaco, monospace),
        ),
        font-sizes: (
            //  "static" sizes, should be in 'rem'.
            normal:             1.6rem,
            
            //  "responsive" sizes, should be in '%' or 'em'.
            smaller:            85%,
            larger:             115%,
        ),
        
        font-family:            sans-serif,
        line-height:            1.75,
        
        //  determines the value (in ems) by which headings h1-h6 are scaled
        //  relative to font-size.
        hx-scale-increment:     0.25em,
    ),
    
    layout: (
        //  if 'type-based-grid' is true, this gutter will be ignored.
        gutter:                 2.4rem,
        
        grid-columns:           12,
        
        breakpoints: (
            small: (
                max-width:          640px,
            ),
            medium: (
                min-width:          641px,
            ),
            large: (
                min-width:          1024px,
            ),
            retina: (
                min-device-pixel-ratio: 2,
                min-resolution:     192dpi,
            ),
        ),
        
        z-indices: (
            default:                1,
        ),
    ),
    
    features: (
        //  feature flags
        //  toggle whether the project gutter and vertical spacing are based on line-height.
        type-based-grid:        true,
        
        //  toggle whether or not Petra outputs a CSS reset.
        reset-css:              true,
        
        //  toggle whether to reset the styles for the :focus pseudo-selector.
        reset-focus:            false,
        
        //  removes all user agent button styles, rendering them as plain text.
        hard-reset-buttons:     true,
        
        //  toggle nested BEM namespacing; applies to block and element mixins.
        nested-bem:             true,
        
        //  if true, will nest block rules to themselves to ensure consistent specificity.
        strict-nesting:         false,
        
        //  toggle the output of responsive modifying classes for grids and utilities.
        responsive-modifiers:   true,
        
        //  determine whether or not to output Petra's animation mixins and @keyframe blocks.
        animation-mixins:       true,
        
        //  toggle whether grid is configured to work with Petra's flexbox rules.
        flexbox-grid:           true,
        
        //  when true, Petra will build the grid with media queries defined in config.
        responsive-grid:        true,
        
        //  if set to false, some lite flex utilities will be built as flex object modifiers.
        flex-utilities:         true,
        
        //  toggle whether or not to output a styles for printed media. uses the HTML5 Boilerplate rules.
        print-media:            true,
    ),
);

