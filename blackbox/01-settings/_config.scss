//
//  Petra Configuration
//
//  Fallback configuration map
$_petra: (
    debugging: (
        messages: (
            lede:                   ("Invalid argument:", "passed to mixin:"),
            on-warn:                "Follow backtrace or review rendered markup.",
            on-error:               "Correct invalid argument to unblock compiler.",
            valid-arg:              "Valid arguments:",
            
            project-settings:       "No '$settings' map found for this project.",
            
            default:                "mixin (no message defined)",
            respond-to:             "@include respond-to()",
            null:                   "@include null()",
        ),
        outline: (
            color:                  red,
            style:                  solid,
            width:                  0.5rem,
        ),
        flags: (
            //  set to 'true' to warn if no $settings map is declared.
            project-settings:       true,
            
            //  warn/error flags for petra mixins using the debug utility.
            //  set to 'true' to error out of a compile with incorrect syntax.
            respond-to:             false,
            float:                  false,
            null:                   false,
        ),
        
        health-check: (
            colors: (
                object:             #2196f3,
                component:          #00c853,
                utility:            #aa00ff,
                scope:              #ff3d00,
                hack:               #f44336,
                javascript:         #ffeb3b,
            ),
        ),
        
        scope-index: (
            //  outputs a count of unique scopes declared with prefixing mixins.
            run:                    false,
        ),
    ),
    
    namespacing: (
        prefixes: (
            object:                 'o',
            component:              'c',
            utility:                'u',
            scope:                  's',
            hack:                   '\*\*',
            javascript:             'js',
            
            delimiter:              '-',
        ),
        delimiters: (
            element:                '__',
            modifier:               '--',
            responsive:             \@,
        ),
    ),
    
    typography: (
        browser-context:        16px,
        
        line-height:            1.75,
        font-sizes: (
            //  "static" sizes, should be in 'rem'.
            normal:                 1.6rem,
            
            //  "responsive" sizes, should be in '%' or 'em'.
            smaller:                85%,
            larger:                 115%,
        ),
        font-faces: (
            open-sans: (
                font-family:            "Open Sans",
                src: (
                    url("/fonts/OpenSans-Regular-webfont.woff2") format("woff2"),
                    url("/fonts/OpenSans-Regular-webfont.woff") format("woff")
                ),
            ),
        ),
        font-stacks: (
            sans-serif:             ("Helvetica Neue", Helvetica, sans-serif),
            serif:                  ("Times New Roman", Times, serif),
            monospace:              ("Lucida Console", Monaco, monospace),
        ),
        
//        font-family:            sans-serif,
        
        //  determines the value (in ems) by which headings h1-h6 are scaled
        //  relative to font-size.
        hx-scale-increment:     0.25em,
    ),
    
    layout: (
        //  if 'type-based-grid' is true, this gutter will be ignored.
        gutter:                 2.4rem,
        
        grid-columns:           12,
        
        breakpoints: (
            small: (
                max-width:          640px,
            ),
            medium: (
                min-width:          641px,
            ),
            large: (
                min-width:          1024px,
            ),
            retina: (
                min-device-pixel-ratio: 2,
                min-resolution:     192dpi,
            ),
        ),
        
        z-indices: (
            default:                1,
        ),
    ),
    
    grouping: (
        list-style-types: (
            circle, disclosure-closed, disclosure-open, decimal, decimal-leading-zero,
            disc, lower-alpha, lower-roman, square, upper-alpha,
            upper-roman,
        ),
    ),
    
    utilities: (
        //  display utilities.
        displays: (
            block, flex, flow, flow-root, grid,
            inline, inline-block, inline-flex, inline-grid, inline-table,
            list-item, run-in, subgrid, table,
        ),
        
        //  interaction utilities.
        cursors: (
            alias, all-scroll, copy, crosshair, default,
            grab, grabbing, help, move, not-allowed,
            none, pointer, progress, text, wait,
            zoom-in, zoom-out,
        ),
        
        pointer-events: (
            auto, initial, none,
        ),
        
        //  layout utilities.
        positions: (
            absolute, fixed, relative, static,
        ),
        floats: (
            left, right, none,
        ),
        
        //  transform utilities.
        rotation-grades: (
            45, 90, 180, 270, 360,
        ),
        
        //  typography utilities.
        font-size-multiplier:   10,
        
        font-weights: (
            normal, bold, bolder, lighter,
        ),
        text-alignments: (
            left, right, center, justify,
        ),
        text-transforms: (
            capitalize, full-width, lowercase, uppercase,
        ),
        white-spaces: (
            normal, pre, pre-line, pre-wrap,
        ),
        vertical-alignments: (
            baseline, bottom, middle, sub, super,
            text-top, text-bottom, top,
        ),
    ),
    
    features: (
        //  feature flags
        //  visual debugging.
        visual-debugging:       true,
        
        //  health check.
        health-check:           false,
        
        //  scope indexer.
        scope-index:            false,
        
        //  toggle whether the project gutter and vertical spacing are based on line-height.
        type-based-grid:        true,
        
        //  toggle whether or not Petra outputs a CSS reset.
        reset-css:              true,
        
        //  toggle whether to reset the styles for the :focus pseudo-selector.
        reset-focus:            false,
        
        //  removes all user agent button styles, rendering them as plain text.
        hard-reset-buttons:     true,
        
        //  toggle nested BEM namespacing; applies to block and element mixins.
        nested-bem:             true,
        
        //  if true, will nest block rules to themselves to ensure consistent specificity.
        strict-nesting:         false,
        
        //  determine whether or not to output Petra's animation mixins and @keyframe blocks.
        animation-mixins:       true,
        
        //  toggle whether grid is configured to work with Petra's flexbox rules.
        flexbox-grid:           true,
        
        //  when true, Petra will build the grid with media queries defined in config.
        responsive-grid:        true,
        
        //  if set to false, some lite flex utilities will be built as flex object modifiers.
        flex-utilities:         true,
        
        //  toggle whether or not to output width-affecting utility classes corresponding with the grid.
        grid-span-utilities:    true,
        
        //  toggle the output of responsive modifying classes for grids and utilities.
        responsive-utilities:   true,
        
        //  toggle whether or not to output a styles for printed media. uses the HTML5 Boilerplate rules.
        print-media:            true,
    ),
);

