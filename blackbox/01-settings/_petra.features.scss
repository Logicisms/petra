//
//  #SETTINGS, #PETRA-FEATURES
//

$_petra-config-features: (
    id: 'feature',

    debug: (
        health-check:           false, // If 'true', Petra will outline all elements in the DOM following the options defined in the debug config module.
        index-scopes:           false, // If 'true', Petra will print an index of output class scopes to the compiler.
        visual-debug:           true, // If 'true', mixins using Petra's debugger will render with a red outline when passed an invalid argument. If 'false' the compiler will error out.
    ),

    namespace: (
        bem-nesting:            false, // https://csswizardry.com/2016/11/nesting-your-bem/
        strict-nesting:         false,
        detached-modifiers:     false, // https://css-tricks.com/abem-useful-adaptation-bem/#article-header-id-5
    ),

    reset: (
        buttons:                true, // If 'true', will completely unset user-agent button styles, causing them to be rendered as plain text.
        focus:                  false, // If 'true', will set the global :focus outline to 0.
        lists:                  true, // If 'true', will remove the list style type from ordered and unordered lists.
        quotes:                 true, // If 'true', will reset the pseudo element content for <blockquote> and <q> elements.
        semantic-type:          true, // If 'true', will reset styles for headings, and semantic <em> and <strong> elements, to prevent them for being used to apply non-semantic styles.
        tables:                 true, // If 'true', will output a reset for table styles.
    ),

    layout: (
        grid-system:            true, // If 'true', will output a configurable, Bootstrap-like grid system.
        grid: (
            conditional-padding:    true, // If 'true', will only apply padding to columns that are direct children of 'row' objects.
            flexbox:                true, // If 'true', will use the flexbox module to format the grid system. Otherwise, will use a clearfix;
            responsive:             true,
        ),
        type-based-grid:        true, // If 'true', project gutter and vertical spacing will be based on the line-height.
        vertical-flow:          true, // If 'true', certain block-level elements will be output with vertical margins based on the project gutter.
    ),

    typography: (
        make-headings:          true, // If 'true', will generate <h1>-<h6> heading font sizes using the `heading-scale-factor` value in the typography config module.
        heading: (
            elements:               true, // If 'true' and 'make-headings' is enabled, will output <h1>-<h6> elements using the generated font-sizes.
            objects:                false, // If 'true' and 'make-headings' is enabled, will output heading object classes using the generated font-sizes.
        ),
    ),

    utilities: (
        important:              true, // If 'true', will make all utility class values !important, to ensure consistency across scopes.
        responsive:             false, // If 'true', will output an array of responsive modifiers (corresponding with grid breakpoints) for enabled utilities. Currently, can lead to bloated output.
        shorthand:              false, // If 'true', utility classes will be output using the shorthand versions of their class names, where applicable.

        display:                true, // If 'true', will output a small set of display and visibility affecting utilities.
        flexbox:                true, // If 'true', outputs a set of flexbox utility classes for use with the framework's flex object.
        health-check:           false, // If 'true', will output a utility class that applies the health-check outlines to descendant entities in the DOM.
        single-responsibility:  true, // If 'true', will use the configured settings to build out single-property utility classes.
        transform:              true, // If 'true', outputs a set of transform utility classes based on the transform grades set in the utility config.
        typography:             true, // If 'true', outputs a set of typography-affecting utilities.
    ),

    print-media:            true, // If 'true', will output a print @media block to reset certain styles for print.
);
