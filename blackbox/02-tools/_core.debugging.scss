//
//  Core, Debugging  
//

//$_debug-get-path:       _pathfinder(debugging); @debug type-of($_debug-get-path);

@function _debug-get-message($key) {
    @return _pathfinder(debugging, messages, $key);
}
    @function debug-message($key) {
        @return _debug-get-message($key);
    }

@function _debug-get-outline($key) {
    @return _pathfinder(debugging, outline, $key);
}

@function _debug-get-flag($key) {
    @return _pathfinder(debugging, flags, $key);
}
    @function debug-flag($key) {
        @return _debug-get-flag($key);
    }


@mixin debug( $mixin: _debug-get-message('default'), $value: "<undefined>", $valid-arguments: "<undefined>", $visual-debug: _feature(visual-debugging) ) {
    @if $visual-debug {
        outline: {
            color: _debug-get-outline('color') !important;
            style: _debug-get-outline('style') !important;
            width: _debug-get-outline('width') !important; }
        
        @warn "#{nth(_debug-get-message(lede), 1)} '#{$value}' #{nth(_debug-get-message(lede), 2)} '#{$mixin}'. #{_debug-get-message(valid-arg)} #{$valid-arguments}. #{_debug-get-message(on-warn)}";
    } @else {
        @warn "#{nth(_debug-get-message(lede), 1)} '#{$value}' #{nth(_debug-get-message(lede), 2)} '#{$mixin}'. #{_debug-get-message(valid-arg)} #{$valid-arguments}. #{_debug-get-message(on-error)}";
        @error _debug-get-message(on-error);
    }
}

