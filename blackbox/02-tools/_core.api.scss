//
//  Core, writing API
//

//  Prefixing
@mixin _prefix($prefix, $names...) {
    $length: length($names);
    $selectors: ();
    
    @for $index from 1 through $length {
        $i: nth($names, $index);
        
        $selectors: append($selectors, #{"." + prefix($prefix) + $i}, comma);
        
        @include _scope-index-counter($prefix, $i);
    }
    
    #{$selectors} {
        @content;
    }
}


//  BEM
@mixin _block {
    @if _feature(nested-bem) and _feature(strict-nesting) {
        &#{&} { @content; }
    } @else {
        & { @content; }
    }
}
    @mixin block {
        @include _block { @content; }
    }

@mixin _element($elements...) {
    $length: length($elements);
    $selectors: ();
    $parent: if(_feature(nested-bem), '& &', '&');
    
    @for $index from 1 through $length {
        $i: nth($elements, $index);
        
        $selectors: append($selectors, #{$parent + $_element + $i}, comma);
    }
    
    #{$selectors} {
        @content;
    }
}
    @mixin element($elements...) {
        @include _element($elements...) { @content; }
    }

@mixin _modifier($modifiers...) {
    $length: length($modifiers);
    $selectors: ();
    
    @for $index from 1 through $length {
        $i: nth($modifiers, $index);
        $modifier: if(_feature(detached-bem-syntax), '&.#{$_modifier + $i}', '&#{$_modifier + $i}');
        
        $selectors: append($selectors, $modifier, comma);
    }
    
    #{$selectors} {
        @content;
    }
}
    @mixin modifier($modifiers...) {
        @include _modifier($modifiers...) { @content; }
    }


//  Breakpoints
@mixin _responsive-modifier($breakpoints...) {
    @each $breakpoint in $breakpoints {
        @include respond-to($breakpoint) {
            &#{$_responsive + $breakpoint} { @content; }
        }
    }
}
    @mixin responsive-modifier($breakpoint...) {
        @include _responsive-modifier($breakpoint...) { @content }
    }

@mixin _responsive-modifier-array {
    @include responsive-modifier($_class-breakpoints...) {
        @content;
    }
}
    @mixin responsive-modifier-array {
        @include _responsive-modifier-array($output) { @content; }
    }

