//
//  Font Icons
//
//  Google's Material Icon set used here, see links below for reference and information
//  https://www.google.com/design/icons/
//  http://google.github.io/material-design-icons/

@font-face {
    font-family:            "Material Icons";
    font-style:             normal;
    font-weight:            400;


    src:                    url(#{$font-path}/MaterialIcons-Regular.eot); /* For IE6-8 */
    src:                    local("Material Icons"),
                            local("MaterialIcons-Regular"),
                            url(#{$font-path}/MaterialIcons-Regular.woff2) format("woff2"),
                            url(#{$font-path}/MaterialIcons-Regular.woff) format("woff"),
                            url(#{$font-path}/MaterialIcons-Regular.ttf) format("truetype");
}

@mixin material-icon($size: 1em) {
    //  @TODO:  make this more useful and accessible.
    //  move the font icon itself into a ::before pseudo-element.
    //  configure the embedded text to be used as an accessibility feature.
    
    //  a mixin here makes it easier to apply these icon-specific styles
    //  to other elements without abusing the @extend directive.
    display:                inline-block;
    height:                 $size;
    width:                  $size;
    
    
    &::before {
        font: {
            family:             "Material Icons";
            size:               inherit;
            style:              normal;
            weight:             normal; }
        line-height:            1;
        text: {
            transform:          none; }

        -webkit-font-smoothing: antialiased;
        text-rendering:         optimizeLegibility;
        -moz-osx-font-smoothing:grayscale;
        font-feature-settings:  "liga";
        
        content:                " "attr(data-icon)" ";
        
        
        @content;
    }
    
    
    > * {
        @include            null(visual);
    }
}

.material-icon,
.mi {
    @include                    material-icon;
    
    
    @include descendant-of(a) {
        cursor:                 pointer;
    }


    &.fw,
    &.full {
        width:                  1.25em;
    }
}

//  font awesome compatibility

@mixin fontawesome {
    //  a mixin here makes it easier to apply these fontawesome-specific styles
    //  to other elements without abusing the @extend directive.
    display:                inline-block;

    font: {
        family:             FontAwesome;
        size:               inherit;
        style:              normal;
        variant:            normal; }
    line-height:            1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing:grayscale;
    text-rendering:         auto;
}

i[class*=fa-] {
    @include                    fontawesome;
    //  allows user to use font awesome icons without precursory "fa" class hook.
    //  e.g. instead of <i class="fa fa-eye"></i>,
    //  user would use <i class="fa-eye"></i>
    
    
    &.fw {
        width:                  2rem;
        text-align:             center;
    }

    &.border {
        padding: {
            top:                .2em;
            right:              .25em;
            bottom:             .15em;
            left:               .25em; }
        
        border: {
            width:              0.08em;
            style:              solid;
            color:              #eeeeee;
            radius:             .1em; }
    }
}

//    icon stacking

.icon-stack {
    position:               relative;
    display:                inline-block;
    width:                  2em;
    height:                 2em;
    line-height:            2em;
    vertical-align:         middle;


    .stack-1x,
    .stack-2x {
        position:               absolute;
            left:               0;
        width:                  100%;
        text-align:             center;
    }
    
    .stack-1x {
        font: {
            size:               2em; }
    }
    
    .stack-2x {
        line-height:            inherit;
    }
}






