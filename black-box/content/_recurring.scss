//
//  Recurring Classes
//

//  content formatting classes

.clear,
.clearfix {
    @include clearfix;
    
    
    $at:                    $ns-responsive;
    
    @media screen and (max-width: $grid-break-small) {
        &#{$at}small {
            @include clearfix;
        }
    }

    @media screen and (max-width: $grid-break-large) {
        &#{$at}small\/medium {
            @include clearfix;
        }
    }

    @media screen and (min-width: $grid-break-small) and (max-width: $grid-break-large) {
        &#{$at}medium {
            @include clearfix;
        }
    }

    @media screen and (min-width: $grid-break-small) {
        &#{$at}medium\/large {
            @include clearfix;
        }
    }

    @media screen and (min-width: $grid-break-large) {
        &#{$at}large {
            @include clearfix;
        }
    }
}


//  transformative classes

.rotate {
    @each $var in $util-rot-grades {
        &-#{$var} {
            transform:              rotate(#{$var}deg);
        }
    }
}

.flip {
    &-horizontal {
        transform:              scale(-1, 1);
    }

    &-vertical {
        transform:              scale(1, -1);
    }
}


//  typography modifiers

.text {
    $at:                    $ns-responsive;
    
    @mixin text-lg {
        //  makes txt 33% larger relative to its container
        font-size:              1.5em !important;
//      line-height:            0.75 !important;
    }
    
    &-lg {
        @include text-lg;
        
        
        @media screen and (max-width: $grid-break-small) {
            &#{$at}small {
                @include text-lg;
            }
        }

        @media screen and (max-width: $grid-break-large) {
            &#{$at}small\/medium {
                @include text-lg;
            }
        }

        @media screen and (min-width: $grid-break-small) and (max-width: $grid-break-large) {
            &#{$at}medium {
                @include text-lg;
            }
        }

        @media screen and (min-width: $grid-break-small) {
            &#{$at}medium\/large {
                @include text-lg;
            }
        }

        @media screen and (min-width: $grid-break-large) {
            &#{$at}large {
                @include text-lg;
            }
        }
    }


    $scale-values:              $util-type-scale;

    @for $i from 1 through $scale-values {
        &-x#{$i} {
            font-size:              1em * $i !important;
        }

        &-scale-#{$i} {
            font-size:              1em * $i !important;
        }
    }


    $justification-values:      left, center, right, justify;
    
    @each $i in $justification-values {
        &-#{$i},
        &-align-#{$i} {
            text-align:             $i !important;
        }
    }

    @media screen and (max-width: $grid-break-small) {
        @each $i in $justification-values {
            &-#{$i},
            &-align-#{$i} {
                &#{$at}small {
                    text-align:             $i !important;
                }
            }
        }
    }
    
    @media screen and (max-width: $grid-break-large) {
        @each $i in $justification-values {
            &-#{$i},
            &-align-#{$i} {
                &#{$at}small\/medium {
                    text-align:             $i !important;
                }
            }
        }
    }

    @media screen and (min-width: $grid-break-small) and (max-width: $grid-break-large) {
        @each $i in $justification-values {
            &-#{$i},
            &-align-#{$i} {
                &#{$at}medium {
                    text-align:             $i !important;
                }
            }
        }
    }
    
    @media screen and (min-width: $grid-break-small) {
        @each $i in $justification-values {
            &-#{$i},
            &-align-#{$i} {
                &#{$at}medium\/large {
                    text-align:             $i !important;
                }
            }
        }
    }

    @media screen and (min-width: $grid-break-large) {
        @each $i in $justification-values {
            &-#{$i},
            &-align-#{$i} {
                &#{$at}large {
                    text-align:             $i !important;
                }
            }
        }
    }
}

.font {
    &-weight {
        $values:                normal,
                                bold,
                                bolder,
                                lighter,
                                initial,
                                inherit;
        
        @each $i in $values {
            @include modifier('#{$i}') {
                font: {
                    weight:             $i; }
            }
        }
    }
}


@each $i in capitalize, lowercase, uppercase {
    .#{$i} {
        text-transform:         $i;
    }
}

.nowrap {
    white-space:            nowrap;
}


//  formatting classes

.position {
    $values:                absolute,
                            fixed,
                            inherit,
                            initial,
                            relative,
                            static;

    @each $i in $values {
        @include modifier($i) {
            position:               $i !important;
        }
    }
    
    &-center {
        @include                position-center;
        
        
        @include modifier('horizontal') {
            @include                position-center($vertical: false);
        }
        
        @include modifier('vertical') {
            @include                position-center($horizontal: false);
        }
    }
}

.affix {
    @extend                 .position#{$ns-modifier}fixed;
}


.align {
    $at:                    $ns-responsive;
    
    $content-floats:            left, right, none;

    @each $i in $content-floats {
        &-#{$i} {
            float:                  $i !important;
        }
    }

    @media screen and (max-width: $grid-break-small) {
        @each $i in $content-floats {
            &-#{$i} {
                &#{$at}small {
                    float:                  $i !important;
                }
            }
        }
    }

    @media screen and (max-width: $grid-break-large) {
        @each $i in $content-floats {
            &-#{$i} {
                &#{$at}small\/medium {
                    float:                  $i !important;
                }
            }
        }
    }

    @media screen and (min-width: $grid-break-small) and (max-width: $grid-break-large) {
        @each $i in $content-floats {
            &-#{$i} {
                &#{$at}medium {
                    float:                  $i !important;
                }
            }
        }
    }

    @media screen and (min-width: $grid-break-small) {
        @each $i in $content-floats {
            &-#{$i} {
                &#{$at}medium\/large {
                    float:                  $i !important;
                }
            }
        }
    }

    @media screen and (min-width: $grid-break-large) {
        @each $i in $content-floats {
            &-#{$i} {
                &#{$at}large {
                    float:                  $i !important;
                }
            }
        }
    }


    &-center {
        @include align(center);


        @media screen and (max-width: $grid-break-small) {
            &#{$at}small {
                @include align(center);
            }
        }

        @media screen and (max-width: $grid-break-large) {
            &#{$at}small\/medium {
                @include align(center);
            }
        }

        @media screen and (min-width: $grid-break-small) and (max-width: $grid-break-large) {
            &#{$at}medium {
                @include align(center);
            }
        }

        @media screen and (min-width: $grid-break-small) {
            &#{$at}medium\/large {
                @include align(center);
            }
        }

        @media screen and (min-width: $grid-break-large) {
            &#{$at}large {
                @include align(center);
            }
        }
    }
}


@each $i in left, right {
    .#{$i} {
        float:                  $i;

        text-align:             $i;
    }
}

.center {
    text-align:             center;

    @include align(center);
}


.vertical-align {
    $values:                baseline,
                            bottom,
                            initial,
                            inherit,
                            middle,
                            sub,
                            super,
                            text-top,
                            text-bottom,
                            top;
    
    @each $var in $values {
        @include modifier($var) {
            vertical-align:         $var;
        }
    }
}


.br {
    margin: {
        bottom:             $gutter; }


    &-right {
        margin: {
            right:              $gutter;
        }
    }

    &-left {
        margin: {
            left:               $gutter;
        }
    }
}


//  display modifiers

.display {
    $values:                block,
                            inherit,
                            initial,
                            inline,
                            inline-block,
                            inline-table,
                            list-item,
                            none,
                            table,
                            table-caption,
                            table-cell,
                            table-column,
                            table-column-group,
                            table-header-group,
                            table-footer-group,
                            table-row,
                            table-row-group;

    @each $var in $values {
        @include modifier($var) {
            display:             $var !important;
        }
    }
}

.null {
    $at:                    $ns-responsive;
    
    @include null;


    &#{$at} {
        &small {
            @include null(small);
        }

        &small\/medium {
            @include null(small/medium);
        }

        &medium {
            @include null(medium);
        }

        &medium\/large {
            @include null(medium/large);
        }

        &large {
            @include null(large);
        }
        
        &print {
            @include null(print);
        }
        
        &visual {
            @include null(visual);
        }
    }
}

.visible {
    visibility:             visible;
}

.hidden,
.invisible {
    visibility:             hidden;
}

.cursor {
    $values:                alias,
                            all-scroll,
                            auto,
                            cell,
                            context-menu,
                            copy,
                            crosshair,
                            default,
                            grab,
                            grabbing,
                            help,
                            move,
                            no-drop,
                            none,
                            not-allowed,
                            pointer,
                            progress,
                            text,
                            vertical-text,
                            w-resize,
                            wait,
                            zoom-in,
                            zoom-out,

                            e-resize,
                            ew-resize,
                            n-resize,
                            ne-resize,
                            nesw-resize,
                            ns-resize,
                            nw-resize,
                            nwse-resize,
                            s-resize,
                            se-resize,
                            sw-resize,
                            col-resize,
                            row-resize;

    @each $var in $values {
        @include modifier($var) {
            cursor:             $var;
        }
    }
}






