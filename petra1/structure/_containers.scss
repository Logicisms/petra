//
//  Container Elements
//

%container {
    display:                block;
    float:                  left;
}

.master {
    //  .master-class containers are the foremost formatting containers; defining the width and positioning of site content
    //  they follow directly from the root
    //  .master is set and scaled according to percentage-based padding, so all containers will automatically be full-width
    @extend                 %container;

    $i:                     (100 - $grid-master-small) / 2;

    width:                  100%;
    padding: {
        right:              $i;
        left:               $i; }
    position:               relative;

    @include transition(width);


    @include respond-to(medium) {
        $i-tablet:              (100 - $grid-master-medium) / 2;

        padding: {
            right:              $i-tablet;
            left:               $i-tablet; } }

    @include respond-to(large) {
        $i-desktop:             (100 - $grid-master-large) / 2;

        padding: {
            right:              $i-desktop;
            left:               $i-desktop; } }


    @include element(fix) {
        //  the master fix can be be nested within .master elements to fix their width after a certain point on large screens
        display:                block;
        width:                  100%;
        max-width:              $grid-master-fixed;
        margin:                 0 auto; }
}

.blog {
    @include element(main) {
        //  the primary content area in a site built on a blogging CMS
        @extend                 %container;

        padding:                0;

        @include transition(width);


        @include respond-to(medium/large) {
            padding: {
                right:              ($gutter/2)
            }
        }
    }

    @include element(aside) {
        //  the sidebar content area in a site built on a blogging CMS
        //  recommended assigned element is <aside>
        @extend                 %container;

        padding:                0;

        @include transition(width);


        @include respond-to(medium/large) {
            padding: {
                left:               ($gutter/2);
            }
        }
    }
}






